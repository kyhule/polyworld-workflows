name: Pre-merge

on:
  workflow_call:

    inputs:

      runner:
        description: "Name of runner to use for this workflow."
        required: false
        type: string
        default: 'ubuntu-latest'

      checkout-fetch-depth:
        description: "Fetch depth of the checkout."
        required: false
        type: number
        default: 0

      java-version:
        description: "The java version to use."
        required: false
        type: number
        default: 17

      setup-android:
        description: "Sets up android sdk home."
        required: false
        type: boolean
        default: true

      build-tasks:
        description: "Gradle tasks to execute during build step."
        required: false
        type: string
        default: 'build'

      build-args:
        description: "Gradle arguments to pass with task execution."
        required: false
        type: string
        default: '--no-configuration-cache'

concurrency:
  group: 'pre-merge-${{ github.event.merge_group.head_ref || github.head_ref }}-${{ github.workflow }}'
  cancel-in-progress: true

env:
  ORG_GRADLE_PROJECT_githubPackagesUsername: kyhule
  ORG_GRADLE_PROJECT_githubPackagesPassword: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    runs-on: ${{ inputs.runner }}

    steps:

      - name: Checkout the repo
        uses: actions/checkout@v3
        with:
          fetch-depth: ${{ inputs.checkout-fetch-depth }}

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: ${{ inputs.java-version }}

      - name: Set up Android
        uses: android-actions/setup-android@v2
        if: ${{ inputs.setup-android }}

      - name: Set up Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-home-cache-cleanup: true

      - name: Build and Test
        run: >
          ./gradlew
          ${{ inputs.build-tasks }}
          ${{ inputs.build-args }}

      - name: Check test output existence
        id: check_test_output
        uses: andstor/file-existence-action@v3
        if: success() || failure()
        with:
          files: '**/build/test-results/**/*.xml'

      - name: Test Report
        uses: dorny/test-reporter@v1
        if: steps.check_test_outputs.file_exists == 'true'
        with:
          name: Junit Tests
          path: '**/build/test-results/**/*.xml'
          reporter: java-junit
          fail-on-error: false
